<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="assigneeTT.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="teamTT.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <metadata name="descTT.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>220, 17</value>
  </metadata>
  <metadata name="idTT.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>309, 17</value>
  </metadata>
  <metadata name="tagsTT.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>384, 17</value>
  </metadata>
  <metadata name="subsTT.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>471, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAACQAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABoAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAHAAAAAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAKcAAAAGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAA0QAAAIgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACNAAAA/gAA
        AFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAC4AAABJAAAAWwAAAGIAAABdAAAATAAAADIAAAAWAAAAAAAA
        AEcAAADwAAAA7wAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAFEAAACZAAAAzgAAAOwAAAD5AAAA/gAAAP8AAAD+AAAA+gAA
        AO4AAADUAAAApgAAANEAAAD/AAAA0QAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIAAABoAAAAyQAAAPkAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAywAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQQAAAL4AAAD9AAAA/wAAAP8AAAD+AAAA5gAA
        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
        AP8AAADjAAAAKSgaAwBjQAccYT8H1GE+B9NfPQYgWTkFAF89Bg1hPweuYT4H+mA+B9hhPgf3Yj8H82I/
        B7ljQAeDYT8H7WA+B514UAoAY0AHAGE+BzdhPgfzYT4HhWA+B6thPwfqY0AHM0cuBQAAAAAQAAAAxQAA
        AP8AAADyAAAAPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAkAAACGAAAA/wAAAP8AAAClAAAAA2E/BwBpRAhraEQI/mhDCHJrRggAb0kJAGpFCDNoRAjqZ0MIpmRB
        BxplQgdKZkIImmdDCN9oRAj9aEQI/2lECLhrRghFbUcJDmdDCCJoRAjpaEQIj2dDCDVoRAjtaUQIl3JK
        CQEGBAAAAAAAeQAAAP8AAAD/AAAAfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAB9AAAA/wAAAP8AAABkDQkBAHFKCQhwSQm3b0kJ/3BKCdxxSgmPc0sJQXBJ
        CaFvSQntbUcJNmxGCABlQQcALhsAAG1HCC9vSQncb0kJ9G9JCe9wSQn4cEoJyXFKCZJvSQnvb0kJm41f
        DQBvSAmgb0kJ4XBKCSApGwMAAAAAPAAAAPMAAAD/AAAAsQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAACoAAAA/wAAAPEAAAA4Lx8EAHdPCiN2Tgrkdk4KyXVN
        CsJ2Tgr2d04K9XZOCvx3TgrPeVAKMnlQCwWBVgwAelELAHhPCkN2Tgr2dk4KjHNLCTN0TQqAdU0KzXZO
        Cvh2Tgr/d08K23lQCmx3Twp8dk4K93dPClFUNwcAAAAAGgAAANoAAAD/AAAA0wAAABQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAADBAAAA/wAAAOEAAAAgUjYHAH5U
        C0R9Uwv3fVMLZHhQCgl6UQo/fVMLvH1TC/99Uwv7flQL639UC7CAVQtggVYMIH5UC5Z9UwvyfFMLOHhP
        CgBwSgkAeVAKD3xSC2x9Uwv5fVML8H1TC/l+VAv1fVML/35UC31pRgkAAAAACwAAAMIAAAD/AAAA5AAA
        ACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADMAAAA/wAA
        ANYAAAAWZEMJAIVZDF6EWQz6hFgMTYRYDABhPgYAhVkMpYRYDOWCVwxog1cMoYRYDOWEWQz8hVkM4YVZ
        DPKEWQzMhloMGo5gDgCPYA4Ag1gMAIVZDFeEWQz3g1gMZYFWDFCDWAyqhFgM/IVZDJhmRAkAAAAABQAA
        ALMAAAD/AAAA7AAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABAAAADNAAAA/wAAANUAAAAVa0gKAIxeDWeMXg37jV8NYpFiDgWLXQ0SjF4N1YteDbOaaA8Cj2AMAohb
        DSSJXA1mi10NzYxeDf+MXg35jV8NyI5fDX2PYA40kGEOB4xeDZCLXg3pi10NJYZaDACMXg0hjF4N5oxe
        DaATDgIAAAAABAAAALIAAAD/AAAA7QAAAC8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAwAAADFAAAA/wAAAN4AAAAdZ0YKAJJjDl2TYw7+k2MO8JRkDreUZA+Lk2MO9ZJj
        DoSZaA8Am2kPAIlcDQB0TQoAk2MOoJJjDuqRYg6QkmIOypJjDviTYw7wlGQOupNjDuGTYw7JkWIODphn
        DwCSYw4pk2MO7pNjDpRxTQsAAAAACQAAAL0AAAD/AAAA6AAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAACwAAAA/wAAAO0AAAAwVjoJAJloD0KaaA/3mWgP05lo
        D9SaaA/6mmgP/5tpD8KdahBVnWsQGaJvEQCaaQ8hmmgP45loD6WhbRABlmUPEJdmD0eYZw+WmWgP5ppo
        D/+aaQ/ym2kQo51qEE6baRBTmmgP95loD3NzTgsAAAAAFQAAANMAAAD/AAAA2gAAABoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACNAAAA/wAAAPwAAABWMSIFAKBt
        EB6hbRDhoW4QqZ1rEBigbRCCoW0Q/aBtEO+hbRD2om4Q2KNvEYyibhGPoW0Q959sEFGlcBEAnWsQAJdm
        DwCpdBEDoW4QpaFtEPWgbRDBoG0Q7qFuEPmhbhDqoW0Q9KBtEENYPAkAAAAAMQAAAO0AAAD/AAAAvgAA
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABbAAAA/QAA
        AP8AAACSJBgEAKhyEQOnchGkqHMS6qp0EieocxJQqHMR+KdyEWelcRFXpnIRradyEeqocxH+qHMS+Kp0
        EoqsdRIxq3USB694EgCpdBI0qHMS7KdyEaWkcBENpHARMKZxEYeocxH5qHIRzKZxERMmGgQAAAAAZwAA
        AP8AAAD/AAAAjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAnAAAA5AAAAP8AAADUAAAAGXZRDACudxJKr3gT+LB4E5CveBNLr3gT9q94E1WqdBIAqXMSAq53
        EliveBP3r3gT7q94E/iveBPvsHkTtbF6E2aweBOur3gS7a12EjiveBMArHYSALB5E1uveBP7rncSe45i
        DwAAAAAHAAAAsgAAAP8AAAD/AAAAewAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAqAAAAP8AAAD8AAAAZR0UAwCzexMJtX0Tq7Z9FPO3fhSEtn0U7bZ9
        FHu2fRQAtHsTALd+FHy2fRT2tHwTV7N7E0m0fBOctXwT4LZ9FPy2fRT/tn0U37l/FFO6gBQSuH8UKrZ9
        FNi2fRTWtHwTH0cxCAAAAABDAAAA8wAAAP8AAAD/AAAA8QAAAJ4AAAAuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAPcAAAD/AAAAzAAAABlsSwwAu4EUML2C
        Fd69ghXxvYIV+b2CFbe+gxUHv4MVEb2CFcy9ghXGvIIVDbV8EwDChhUAvYIVWL2CFfW9ghXnvYIV6r2C
        Ffe+gxXOvoMV0r2CFfW8gRRYuH8UAAEBAAAAAABcAAAAyAAAAOYAAAD6AAAA/wAAAP8AAADmAAAAfgAA
        ABoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwAAALQAAAD/AAAA/wAA
        AIgAAAACmGkRAMKGFVLEhxbsxIgW/8SIFvLGiRZJxYgWRcSIFvjEhxZ2yIoWAM+PFwDHiRY8xYgW08SH
        FtzBhRU8wIQVLsOHFqnEhxb/xIcW/MOGFnrBhhUDvoMVAD4qBwAAAAACAAAADQAAACcAAABNAAAAewAA
        AKkAAADTAAAA7gAAAMsAAABgAAAADwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEAAAADsAAAA/wAAAPIAAABcGREDAGlICwDJixZVy4wX4cuNF//MjRfVzI0XvsuNF+nKjBcx0JAYF82O
        F2/MjRfjyowX1smLF0TQkBgizo4Xe8yNF+PLjRfxyosXdcmLFgbEiBYAwIQVAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAUAAAAMQAAAF0AAACCAAAAZwAAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAB9AAAA/QAAAP8AAADnAAAAUSIYBACKXw8Az5AXNdGRGLDSkhj60pIY/9OS
        GPDUkxi305IY1tKSGP3Skhj105MYpdSTGKbTkhjl0pIY/tGRGMjQkBhM1pUYAsmLFgDHihYAEgsCAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAogAAAP8AAAD/AAAA6QAAAGYAAAAGaUkMANiW
        GQvXlRlU2JYZq9mXGePZlxn72ZcZ/9qXGf/alxn/2ZcZ+9mXGezYlhm615UZZNaUGBXPjxcAzo8XAM6O
        FwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFwAAAKwAAAD/AAAA/wAA
        APcAAACcAAAAKlY8CgBxTw0A/7MdBN2aGSLdmhpF3poaYt6bGm/emhpo3ZoaT92aGSrdmhkJ1ZQYANWU
        GADYlhkA05MYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABUAAACbAAAA+wAAAP8AAAD/AAAA4AAAAIcAAAA0AAAACuCcGgDdmhoA3ZoaAN2aGgDdmhoA3ZoaANyZ
        GQDbmRkA35sZANqYGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAJAAAAbgAAAOIAAAD/AAAA/wAAAP8AAADtAAAAwAAAAFEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAACcAAAA8AAAAP8AAAD/AAAA7gAA
        AD0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAswAA
        AP8AAAD/AAAAjwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAPAAAAygAAAP8AAADcAAAAJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAmAAAA5gAAAP8AAAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFAAAA+gAAAMkAAAAWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAA+gAAAFoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXAAAAtgAA
        AAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAkAAACqAAAARQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABwAAAByAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAAAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////8H/8AAP////gf/wAA////8B//
        AAD////wH/8AAP//AAAf/wAA//wAAB//AAD/8AAAH/8AAP/gAAAH/wAA/4AAAAP/AAD/gAAAAf8AAP8A
        AAAB/wAA/gAAAAD/AAAcAAAAAH8AAAAAAAAAfwAAAAAAAAA/AAAAAAAAAD8AAAAAAAAAPwAAAAAAAAAf
        AACAAAAAAB8AAOAAAAAAHwAA8AAAAAAfAADwAAAAAB8AAPAAAAAAHwAA8AAAAAAfAADwAAAAAB8AAPAA
        AAAAHwAA8AAAAAAfAADwAAAAAA8AAPAAAAAABwAA+AAAAAABAAD4AAAAAAAAAPgAAAAAAAAA/AAAAAAA
        AAD8AAAAHAAAAP4AAAB/4AAA/wAAAP//AAD/AAAD//8AAP+AAf///wAA/8AB////AAD/8AH///8AAP/4
        A////wAA//wD////AAD/+Af///8AAP/4D////wAA//gP////AAD/+B////8AAP/4H////wAA//g/////
        AAA=
</value>
  </data>
</root>